name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  EC2_HOST: 3.21.21.17

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  deploy:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Delete previous distribution on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ec2-user@"${{ env.EC2_HOST }}" << 'EOF'
            #!/bin/bash
            # Stop all running Docker containers
            echo "Stopping all Docker containers..."
            sudo docker stop $(sudo docker ps -q) || echo "No running containers to stop."

            # Remove all Docker containers
            echo "Removing all Docker containers..."
            sudo docker rm $(sudo docker ps -aq) || echo "No containers to remove."

            # Remove all Docker images
            echo "Removing all Docker images..."
            sudo docker rmi $(sudo docker images -q) || echo "No Docker images to remove."

            # Clean up old application directory
            echo "Removing the old application directory..."
            sudo rm -rf /home/ec2-user/nodeapp

            # List contents of the application directory for verification
            echo "Listing /home/ec2-user/:"
            ls /home/ec2-user/
          EOF

      - name: Build and Run Docker Container on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ec2-user@"${{ env.EC2_HOST }}" << 'EOF'
            #!/bin/bash

            # Clone your Node.js app from the Git repository (replace with your repo)
            cd /home/ec2-user
            git clone ${{ github.server_url }}/${{ github.repository }}.git nodeapp
            cd nodeapp

            # Preprocess the prometheus.template.yml file to generate prometheus.yml
            sed "s|{{EC2_HOST}}|${{ env.EC2_HOST }}|g; s|{{GRAFANA_API_KEY}}|${{ secrets.GRAFANA_API_KEY }}|g" prometheus.template.yml > prometheus.yml

            # Build and run the Docker container
            sudo docker build -t nodeapp .
            sudo docker run -d -p 80:3000 --name nodeapp nodeapp

            # Start docker compose
            sudo docker-compose up --build -d
          EOF

      - name: Clean up SSH key
        run: rm ec2_key.pem
