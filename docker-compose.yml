services:
  backend:
    build:
      context: ./backend
    ports:
      - "3030:3030"
    restart: always
    networks:
      - nodejs-network

  main-app:
    build:
      context: ./main-app
    ports:
      - "3000:3000"  # Keep React app container on port 3000
    volumes:
      - ./main-app/build:/usr/src/app/build  # Mount the build directory to the container to access static files during development
    restart: always
    networks:
      - nodejs-network

  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "80:3000"  # Map Nginx container port 3000 to host port 80
    volumes:
      - ./main-app/nginx.conf:/etc/nginx/nginx.conf  # Mount a custom Nginx config file
      - ./main-app/build:/usr/share/nginx/html  # Mount the build directory to Nginx's web root
    networks:
      - nodejs-network

  sub-app:
    build:
      context: ./sub-app
    ports:
      - "3001:3001"
    restart: always
    networks:
      - nodejs-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100:9100
    networks:
      - nodejs-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090:9090
    networks:
      - nodejs-network

networks:
  nodejs-network:
    driver: bridge

volumes:
  prometheus_data: {}